# The root logger uses the appenders called A1 and A2. Since no level
# is specified, note the empty string between the comma (",") and the
# equals sign ("="), the level of the root logger remains
# untouched. Log4j always initializes the level for the root logger to
# DEBUG. The root logger is the only logger that has a default
# level. Bu default, all other loggers do not have an assigned level,
# such that they inherit their level instead.

log4j.rootLogger= DEBUG,INFO, A1 , A2
#log4j.logger.sitech.www.frame.demo = DEBUG, A2

# A1 is set to be ConsoleAppender sending its output to System.out
log4j.appender.A1=org.apache.log4j.ConsoleAppender
# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout

# The conversion pattern consists of date in ISO8601 format, level,
# thread name, logger name truncated to its rightmost two components
# and left justified to 17 characters, location information consisting
# of file name (padded to 13 characters) and line number, nested
# diagnostic context, the and the application supplied message

#log4j.appender.A1.layout.ConversionPattern=%d %-5p [%t] %-17c{2} (%13F:%L) %3x - %m%n
#log4j.appender.A1.layout.ConversionPattern=%d{MM/dd/HH:mm:ss} %r %-5p [%t] %c{2} - %m%n
#log4j.appender.A1.layout.ConversionPattern=%d{MMdd/HH:mm:ss} %r %-5p [%t] %c{2} %m%n
log4j.appender.A1.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} <%-5p> [%c %L] %m%n

# Appender A2 writes to the file "test".
log4j.appender.A2=org.apache.log4j.FileAppender
log4j.appender.A2.File=log4j.log
log4j.appender.A2.layout.ConversionPattern=%d{MM/dd/HH\:mm\:ss} %r %-5p [%t] %c{2} - %m%n
#log4j.appender.ROOT=org.apache.log4j.RollingFileAppender
#log4j.appender.ROOT.File=myapplication.log
#log4j.appender.ROOT.MaxFileSize=1000KB
# \u4fdd\u75595\u4e2a\u65e7\u7684\u65e5\u5fd7\u6587\u4ef6
#log4j.appender.ROOT.MaxBackupIndex=5

# Truncate 'test' if it aleady exists.
log4j.appender.A2.Append=false

# \u65e5\u5fd7\u683c\u5f0f\uff1a\u6309\u7167\u901a\u7528\u65e5\u5fd7\u683c\u5f0f\u76f8\u4f3c\u7684\u65b9\u5f0f\u8bb0\u5f55
# \u65e5\u671f,\u7a0b\u5e8f\u5f00\u59cb\u5230\u76ee\u524d\u6240\u7528\u65f6\u95f4\uff08\u6beb\u79d2\uff09,log\u7ea7\u522b,\u7ebf\u7a0b\u4fe1\u606f,logger\u7684\u540d\u5b57,\u5177\u4f53\u7684\u4fe1\u606f
# Appender A2 uses the PatternLayout.
log4j.appender.A2.layout=org.apache.log4j.PatternLayout

# \u6709\u9009\u62e9\u5730\u66f4\u6539\u67d0\u4e9b\u5305\u6216\u8005\u7c7b\u7684\u65e5\u5fd7\u7ea7\u522b
# In this example, we are not interested in INNER loop or SWAP
# messages.  You might try to set INNER and SWAP to DEBUG for more
# verbose output.

#log4j.logger.org.apache.log4j.examples.SortAlgo.SWAP=INFO
log4j.logger.uk.ltd.getahead.dwr=ERROR
#log4j.logger.org.springframework=ERROR
#log4j.logger.com.opensymphony=ERROR
log4j.logger.freemarker=ERROR
log4j.logger.com.sitech=DEBUG
log4j.logger.org.apache.axis.ConfigurationException = INFO
